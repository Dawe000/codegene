import * as React from 'react';
import { useState } from 'react';

interface ExploitCodeProps {
  exploit: {
    name: string;
    vulnerability_name?: string;
    description: string;
    severity: string;
    exploit_code: string;
    mitigation: string;
    hardhat_test?: string;
  };
}

const ExploitCode: React.FC<ExploitCodeProps> = ({ exploit }) => {
  const [isExpanded, setIsExpanded] = useState(false);
  
  const getSeverityColor = (severity: string) => {
    switch (severity.toLowerCase()) {
      case 'high': return 'text-red-400 border-red-500/50 bg-red-500/10';
      case 'medium': return 'text-amber-400 border-amber-500/50 bg-amber-500/10';
      case 'low': return 'text-emerald-400 border-emerald-500/50 bg-emerald-500/10';
      default: return 'text-slate-400 border-slate-500/50 bg-slate-500/10';
    }
  };

  return (
    <div className="mb-4 border border-slate-700/50 rounded-xl overflow-hidden bg-slate-800/50 backdrop-blur-sm">
      <div 
        className="p-4 cursor-pointer flex justify-between items-center"
        onClick={() => setIsExpanded(!isExpanded)}
      >
        <div className="flex items-center gap-3">
          <span className="text-red-400">⚠️</span>
          <span className="font-semibold">{exploit.name}</span>
          <span className={`text-xs px-2 py-0.5 rounded-full ${getSeverityColor(exploit.severity)}`}>
            {exploit.severity}
          </span>
        </div>
        <span>{isExpanded ? '▼' : '▶'}</span>
      </div>

      {isExpanded && (
        <div className="border-t border-slate-700/50">
          <div className="p-4 text-sm text-slate-300">
            <p className="mb-3">{exploit.description}</p>
            
            <div className="mt-4">
              <h4 className="text-sm font-medium text-slate-400 mb-2">Mitigation:</h4>
              <p className="text-slate-300">{exploit.mitigation}</p>
            </div>
          </div>
        </div>
      )}
    </div>
  );
};

export default ExploitCode;